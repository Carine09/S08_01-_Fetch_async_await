/* Pour ce premier exercice, tu peux reprendre la fonction fetchOffers() quâ€™on a crÃ©Ã© plus haut. Le but de cet exercice va Ãªtre de gÃ©nÃ©rer du HTML Ã  partir de la donnÃ©e plutÃ´t que faire un simple console.log().

Par exemple, le HTML gÃ©nÃ©rÃ© pour une offre, pourrait ressembler Ã  Ã§a :

 
<h2>TraducteurÂ·ice en Chef d'Ã‰mojis</h2>
<p>Parlez-vous couramment le langage des Ã©mojis ? Nous recrutons une personne en tant que Traducteur en Chef d'Ã‰mojis pour combler le fossÃ© de communication entre les dÃ©veloppeurs et les personnes concernÃ©es, qu'elles soient techniques ou non. La personne doit avoir un talent pour traduire un code complexe en Ã©mojis expressifs et vice versa. Des points bonus si la personne peut dÃ©coder les messages secrets cachÃ©s dans les ğŸ’»ğŸ¤”ğŸš€.</p>

ğŸ’¡ Indice : tu peux utiliser la propriÃ©tÃ© innerHTML et les template strings pour gÃ©nÃ©rer le HTML Ã  partir du JSON.
*/

const offerContainer = document.querySelector("#offerContainer");

async function fetchOffers() {
    const response = await fetch("https://www.codepassport.dev/api/offers");
    const offers = await response.json();
    console.log(offers);
    // console.log(offers[0].titre);

    offers.forEach(offer => {
        let titleContainer = document.createElement("h2");
        titleContainer.innerText = offer.titre;
        offerContainer.appendChild(titleContainer);

        let desContainer = document.createElement("p");
        desContainer.innerText = offer.description;
        offerContainer.appendChild(desContainer)
    });
}

fetchOffers();

// const apiUrl = "https://www.codepassport.dev/api/offers";

// async function fetchData() {
//   const response = await fetch(apiUrl);
//   const json = await response.json();
//   listOffer(json);
// }

// function listOffer(offers) {
//   offers.map((offre) => {
//     console.log(offre.titre);
//   });
// }

// fetchData();